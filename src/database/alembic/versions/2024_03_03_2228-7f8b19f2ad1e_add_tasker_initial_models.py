"""Add Tasker initial models

Revision ID: 7f8b19f2ad1e
Revises: d5882b316093
Create Date: 2024-03-03 22:28:11.640758

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '7f8b19f2ad1e'
down_revision: Union[str, None] = 'd5882b316093'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('project',
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.Column('project_name', sa.String(), nullable=False),
    sa.Column('forum_id', sa.String(), nullable=True),
    sa.Column('server_id', sa.String(), nullable=True),
    sa.Column('project_roles', sa.String(), nullable=False),
    sa.Column('reminder_frequency', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['server_id'], ['server_connexion.server_id'], ),
    sa.PrimaryKeyConstraint('project_id')
    )
    op.create_table('contributor',
    sa.Column('member_id', sa.String(), nullable=False),
    sa.Column('no_dms', sa.Integer(), nullable=False),
    sa.Column('no_mention', sa.Integer(), nullable=False),
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['project_id'], ['project.project_id'], ),
    sa.PrimaryKeyConstraint('member_id', 'project_id')
    )
    op.create_table('task',
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('starts_after', sa.String(), nullable=True),
    sa.Column('ends_before', sa.String(), nullable=True),
    sa.Column('urgent_after', sa.String(), nullable=True),
    sa.Column('ignore', sa.Integer(), nullable=False),
    sa.Column('advancement', sa.Integer(), nullable=False),
    sa.Column('next_recall', sa.String(), nullable=True),
    sa.Column('thread_id', sa.String(), nullable=True),
    sa.Column('main_message_id', sa.String(), nullable=True),
    sa.Column('sec_message_id', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['project_id'], ['project.project_id'], ),
    sa.PrimaryKeyConstraint('project_id', 'title')
    )
    op.create_table('task_dependency',
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.Column('task1', sa.String(), nullable=False),
    sa.Column('task2', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['project_id', 'task1'], ['task.project_id', 'task.title'], ),
    sa.ForeignKeyConstraint(['project_id', 'task2'], ['task.project_id', 'task.title'], ),
    sa.PrimaryKeyConstraint('project_id', 'task1', 'task2')
    )
    op.create_table('task_interested',
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.Column('task_title', sa.String(), nullable=False),
    sa.Column('member_id', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['project_id', 'member_id'], ['contributor.project_id', 'contributor.member_id'], ),
    sa.ForeignKeyConstraint(['project_id', 'task_title'], ['task.project_id', 'task.title'], ),
    sa.PrimaryKeyConstraint('project_id', 'task_title', 'member_id')
    )
    op.create_table('task_log',
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.Column('task_title', sa.String(), nullable=False),
    sa.Column('timestamp', sa.String(), nullable=False),
    sa.Column('member_id', sa.String(), nullable=False),
    sa.Column('log_message', sa.String(), nullable=False),
    sa.Column('log_type', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['project_id', 'member_id'], ['contributor.project_id', 'contributor.member_id'], ),
    sa.ForeignKeyConstraint(['project_id', 'task_title'], ['task.project_id', 'task.title'], ),
    sa.PrimaryKeyConstraint('project_id', 'task_title', 'timestamp', 'member_id')
    )
    op.create_table('task_participant',
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.Column('task_title', sa.String(), nullable=False),
    sa.Column('member_id', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['project_id', 'member_id'], ['contributor.project_id', 'contributor.member_id'], ),
    sa.ForeignKeyConstraint(['project_id', 'task_title'], ['task.project_id', 'task.title'], ),
    sa.PrimaryKeyConstraint('project_id', 'task_title', 'member_id')
    )
    op.create_table('task_step',
    sa.Column('step_id', sa.Integer(), nullable=False),
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.Column('task_title', sa.String(), nullable=False),
    sa.Column('step_number', sa.Integer(), nullable=True),
    sa.Column('step_description', sa.String(), nullable=False),
    sa.Column('done', sa.Integer(), nullable=True),
    sa.Column('kind', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['project_id', 'task_title'], ['task.project_id', 'task.title'], ),
    sa.PrimaryKeyConstraint('step_id')
    )
    op.create_table('task_veteran',
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.Column('task_title', sa.String(), nullable=False),
    sa.Column('member_id', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['project_id', 'member_id'], ['contributor.project_id', 'contributor.member_id'], ),
    sa.ForeignKeyConstraint(['project_id', 'task_title'], ['task.project_id', 'task.title'], ),
    sa.PrimaryKeyConstraint('project_id', 'task_title', 'member_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('task_veteran')
    op.drop_table('task_step')
    op.drop_table('task_participant')
    op.drop_table('task_log')
    op.drop_table('task_interested')
    op.drop_table('task_dependency')
    op.drop_table('task')
    op.drop_table('contributor')
    op.drop_table('project')
    # ### end Alembic commands ###
